{"version":3,"sources":["js/fetchCountries.js","index.js"],"names":["fetchCountries","name","fetch","then","resp","ok","json","catch","error","console","log","DEBOUNCE_DELAY","input","document","querySelector","list","countryInfo","onInput","evt","currentTarget","value","innerHTML","data","markupList","e","length","markup","map","country","flags","svg","common","capital","population","Object","values","languages","join","addEventListener"],"mappings":";;;AAWC,aATM,SAASA,EAAeC,GACpBC,OAAAA,6CAA6CD,qDAChDE,KAAMC,IACE,GAACA,EAAKC,GAGHD,OAAAA,EAAKE,SAEhBC,MAAOC,GAAUC,QAAQC,IAAIF,IACpC,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA;;ACuCA,aAlDD,QAAA,oBACA,IAAA,EAAA,QAAA,uBAEA,MAAMG,EAAiB,IAEjBC,EAAQC,SAASC,cAAc,eAC/BC,EAAOF,SAASC,cAAc,iBAC9BE,EAAcH,SAASC,cAAc,iBAI3C,SAASG,EAAQC,GACT,IAACA,EAAIC,cAAcC,MAGnB,OAFAL,EAAKM,UAAY,QACjBL,EAAYK,UAAY,KAIbH,EAAAA,EAAAA,gBAAAA,EAAIC,cAAcC,OAAOjB,KAAMmB,IAC1CC,EAAWD,KACZf,MAAOiB,IACNf,QAAQC,IAAI,SAIpB,SAASa,EAAWD,GACZA,GAAAA,EAAKG,OAAS,GACPhB,OAAAA,QAAQC,IAAI,YAGnBY,GAAgB,IAAhBA,EAAKG,OAAc,CACbC,MAAAA,EAASJ,EAAKK,IAAKC,6DAEQA,EAAQC,MAAMC,SAASF,EAAQ3B,KAAK8B,iFAGtDH,EAAQI,yCACLJ,EAAQK,2CACTC,OAAOC,OAAOP,EAAQQ,WAAWC,KAAK,uCAMvD,OAFArB,EAAYK,UAAYK,OACxBX,EAAKM,UAAY,IAIfK,MAAAA,EAASJ,EAAKK,IAAKC,sDAA+DA,EAAQC,MAAMC,UAAUF,EAAQ3B,KAAK8B,eAAeM,KAAK,IACjJtB,EAAKM,UAAYK,EACjBV,EAAYK,UAAY,GAxC5BT,EAAM0B,iBAAiB,QAASrB","file":"src.8d535760.js","sourceRoot":"../src","sourcesContent":["\n\nexport function fetchCountries(name) {\n    return fetch(`https://restcountries.com/v3.1/name/${name}?fields=name,capital,population,flags,languages `).\n        then((resp) => {\n            if (!resp.ok) {\n                return;\n            }\n            return resp.json()\n        }).\n        catch((error) => console.log(error));\n}\n","import './css/styles.css';\nimport {fetchCountries} from './js/fetchCountries';\n\nconst DEBOUNCE_DELAY = 300;\n\nconst input = document.querySelector('#search-box');\nconst list = document.querySelector('.country-list');\nconst countryInfo = document.querySelector('.country-info');\n\ninput.addEventListener('input', onInput);\n\nfunction onInput(evt) {\n    if (!evt.currentTarget.value) {\n        list.innerHTML = '';\n        countryInfo.innerHTML = '';\n        return\n    }\n\n    fetchCountries(evt.currentTarget.value).then((data) => {\n        markupList(data);\n    }).catch((e) => { \n        console.log('404')\n    });\n}\n\nfunction markupList(data) {\n    if (data.length > 10) {\n        return console.log(\"Пиши еще\")\n    }\n\n    if (data.length === 1) {\n        const markup = data.map((country) =>  `\n        <h1>\n        <img class = \"main-svg\" src = \"${country.flags.svg}\"/>${country.name.common}\n        </h1>\n        <ul class = \"main-list\">\n        <li>Capital: ${country.capital}</li>\n        <li>Population: ${country.population}</li>\n        <li>Languages: ${Object.values(country.languages).join(', ')}</li>\n        </ul>\n        `);\n\n        countryInfo.innerHTML = markup;\n        list.innerHTML = '';\n        return;\n    }\n\n    const markup = data.map((country) => `<li class = \"country\"><img class = \"svg\" src = \"${country.flags.svg}\"/> ${country.name.common}</li>`).join('');\n    list.innerHTML = markup;\n    countryInfo.innerHTML = '';\n}\n\n\n\n\n"]}